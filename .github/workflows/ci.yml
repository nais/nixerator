name: CI

on:
  push:
    branches: ["**"]
  pull_request:

permissions:
  contents: read

jobs:
  nix:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Nix (Determinate Systems)
        uses: DeterminateSystems/nix-installer-action@v13

      - name: Enable Magic Nix Cache
        uses: DeterminateSystems/magic-nix-cache-action@v6

      - name: Show flake outputs
        run: nix flake show

      - name: Run flake checks (goldens)
        run: nix flake check --show-trace

      - name: Kubeconform validation (networked)
        run: |
          set -euo pipefail
          echo "Deriving manifest packages dynamically"
          # Compute current system from uname to avoid relying on builtins.currentSystem
          case "$(uname -s)" in
            Linux) os=linux ;;
            Darwin) os=darwin ;;
            *) echo "Unsupported OS"; exit 1 ;;
          esac
          case "$(uname -m)" in
            x86_64|amd64) arch=x86_64 ;;
            arm64|aarch64) arch=aarch64 ;;
            *) echo "Unsupported arch"; exit 1 ;;
          esac
          sys="$arch-$os"

          nix eval --json ".#packages.$sys" \
            | nix run nixpkgs#jq -- -r 'keys[]' \
            | grep '^manifests' \
            | while read -r pkg; do
                echo "Building $pkg";
                nix build ".#$pkg";
                echo "Validating $pkg with kubeconform";
                nix run nixpkgs#yq -- -P '.' result \
                  | nix run nixpkgs#kubeconform -- -strict -ignore-missing-schemas -summary -;
              done
