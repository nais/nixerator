apiVersion: apps/v1
kind: Deployment
metadata:
  annotations: {}
  labels: {}
  name: hello
  namespace: default
spec:
  replicas: 2
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
        - env:
            - name: FOO
              value: bar
          image: nginx:1.25
          name: hello
          ports:
            - containerPort: 8080
              name: http
---
apiVersion: v1
kind: Service
metadata:
  annotations: {}
  labels: {}
  name: hello
  namespace: default
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: hello
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations: {}
  labels: {}
  name: hello
  namespace: default
spec:
  rules:
    - host: hello.local
      http:
        paths:
          - backend:
              service:
                name: hello
                port:
                  number: 80
            path: /
            pathType: Prefix
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: hello
  namespace: default
spec:
  maxReplicas: 4
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
  minReplicas: 1
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: hello
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  annotations: {}
  labels: {}
  name: hello
  namespace: default
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: hello
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations: {}
  labels: {}
  name: null
  namespace: default
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  annotations: {}
  labels: {}
  name: hello
  namespace: default
spec:
  egress:
    - ports:
        - port: 53
          protocol: UDP
      to:
        - namespaceSelector: {}
  ingress:
    - from:
        - namespaceSelector: {}
  podSelector:
    matchLabels:
      app: ""
  policyTypes:
    - Ingress
    - Egress
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  annotations: {}
  labels: {}
  name: hello
  namespace: default
spec:
  endpoints:
    - interval: null
      path: /metrics
      port: http
  namespaceSelector: {}
  selector:
    matchLabels: {}
---
apiVersion: v1
data:
  FEATURE_X: "true"
  LOG_LEVEL: info
kind: ConfigMap
metadata:
  annotations: {}
  labels: {}
  name: app-config
  namespace: default
